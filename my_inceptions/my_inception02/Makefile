EC			=	echo
DOC			=	docker
RMD			=	rm -rf
MKD			=	mkdir -p
CHM			=	chmod 755
DOCCOMP_CMD	=	docker-compose -f ./srcs/docker-compose.yml
DATA_DIR	=	/home/elian/data

# Cores para output
GREEN		=	\033[0;32m
YELLOW		=	\033[0;33m
RED			=	\033[0;31m
NC			=	\033[0m

all: mkfolder build up

mkfolder:
	@$(EC) "$(YELLOW)üìÅ Criando os diret√≥rios do projecto...$(NC)"
	@$(MKD) $(DATA_DIR)
	@$(MKD) $(DATA_DIR)/mariadb
	@$(MKD) $(DATA_DIR)/wordpress
	@$(CHM) $(DATA_DIR)
	@$(CHM) $(DATA_DIR)/mariadb
	@$(CHM) $(DATA_DIR)/wordpress
	@$(EC) "$(GREEN)‚úÖ Diret√≥rios do projecto criados$(NC)"

rmfolder:
	@$(EC) "$(RED)üßπ Limpando os diret√≥rios do projecto...$(NC)"
	@$(RMD) $(DATA_DIR)
	@$(EC) "$(GREEN)‚úÖ Diret√≥rios do projecto limpos$(NC)"

build:
	@$(EC) "$(YELLOW)üî® Construindo as imagens do Docker...$(NC)"
	@$(DOCCOMP_CMD) build --no-cache

up:
	@$(EC) "$(YELLOW)üöÄ Iniciando os servi√ßos...$(NC)"
	@$(DOCCOMP_CMD) up -d

start:
	@$(EC) "$(YELLOW)‚ñ∂Ô∏è  Iniciando os containers...$(NC)"
	@$(DOCCOMP_CMD) start

stop:
	@$(EC) "$(RED)‚èπÔ∏è  Parando os containers...$(NC)"
	@$(DOCCOMP_CMD) stop

restart: stop start

down:
	@$(EC) "$(RED)‚¨áÔ∏è  Removendo os servi√ßos...$(NC)"
	@$(DOCCOMP_CMD) down

destroy: down
	@$(EC) "$(RED)üí• Destruindo containers, volumes e imagens...$(NC)"
	@$(DOC) system prune -af --volumes
	@$(EC) "$(GREEN)‚úÖ Sistema Docker limpo$(NC)"

fclean: destroy rmfolder

re: fclean all

status:
	@$(EC) "$(YELLOW)üìä Status dos containers:$(NC)"
	@$(DOC) ps -a --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

logs:
	@$(EC) "$(YELLOW)üìã Exibindo os logs dos servi√ßos...$(NC)"
	@$(DOCCOMP_CMD) logs --tail=50 -f

logs-service:
	@$(EC) "$(YELLOW)üìã Logs do servi√ßo [$(SERVICE)]:$(NC)"
	@$(DOCCOMP_CMD) logs --tail=100 -f $(SERVICE)

images:
	@$(EC) "$(YELLOW)üñºÔ∏è  Imagens Docker:$(NC)"
	@$(DOC) images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}\t{{.CreatedAt}}"

volumes:
	@$(EC) "$(YELLOW)üíæ Volumes Docker:$(NC)"
	@$(DOC) volume ls

networks:
	@$(EC) "$(YELLOW)üåê Redes Docker:$(NC)"
	@$(DOC) network ls

shell-nginx:
	@$(DOC) exec -it nginx /bin/bash

shell-wordpress:
	@$(DOC) exec -it wordpress /bin/bash

shell-mariadb:
	@$(DOC) exec -it mariadb /bin/bash

help:
	@$(EC) "$(GREEN)üÜò Comandos dispon√≠veis:$(NC)"
	@$(EC) "  $(YELLOW)all$(NC)         - Criar pastas, build e executar"
	@$(EC) "  $(YELLOW)build$(NC)       - Construir as imagens"
	@$(EC) "  $(YELLOW)up$(NC)          - Iniciar os servi√ßos"
	@$(EC) "  $(YELLOW)down$(NC)        - Parar os servi√ßos"
	@$(EC) "  $(YELLOW)restart$(NC)     - Reiniciar containers"
	@$(EC) "  $(YELLOW)status$(NC)      - Ver status dos containers"
	@$(EC) "  $(YELLOW)logs$(NC)        - Ver logs de todos servi√ßos"
	@$(EC) "  $(YELLOW)logs-service SERVICE=nome$(NC) - Ver logs de um servi√ßo"
	@$(EC) "  $(YELLOW)shell-*$(NC)     - Acesso shell aos containers"
	@$(EC) "  $(YELLOW)fclean$(NC)      - Limpeza completa"
	@$(EC) "  $(YELLOW)re$(NC)          - Rebuild completo"

.PHONY: mkfolder rmfolder all build up start stop restart down destroy fclean re status logs logs-service images volumes networks shell-nginx shell-wordpress shell-mariadb help
